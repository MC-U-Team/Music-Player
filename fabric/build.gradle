plugins {
	id "fabric-loom"
	id "info.u_team.gradle_files"
	id "info.u_team.curse_gradle_uploader"
	id "maven-publish"
	id "com.github.johnrengelman.shadow" version "8.1.1"
}

gradlefiles.loaderSuffix = "fabric"

group = rootProject.group
archivesBaseName = gradlefiles.archivesBaseName()
version = gradlefiles.version()

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	withSourcesJar()
	withJavadocJar()
}

loom {
	accessWidenerPath = file("src/main/resources/musicplayer.accesswidener")
	
	runs {
		client {
			property "musicplayer.dev", getRootProject().devPath()
			
			runDir "run/client"
			ideConfigGenerated true
		}
		
		server {
			runDir "run/server"
			ideConfigGenerated true
		}
	}
}

configurations {
	shade
	library
	library.extendsFrom(shade)
	implementation.extendsFrom(library)
}

tasks.named("shadowJar").configure {
	archiveClassifier = tasks.getByName("jar").archiveClassifier
	destinationDirectory = tasks.getByName("jar").destinationDirectory
	
	configurations = [project.configurations.shade]
	
	dependsOn tasks.named("jar")
	dependsOn ":musicplayer-lavaplayer-api:assemble"
	dependsOn ":musicplayer-lavaplayer:assemble"
	
	from sourceSets.main.output
	from project(":musicplayer-lavaplayer").file("src/main/resources/LICENSE-DEPENDENCIES")
	
	doFirst {
		from project(":musicplayer-lavaplayer-api").sourceSets.main.output
	}
	
	into ("dependencies") {
		from project(":musicplayer-lavaplayer").file("build/libs/musicplayer-lavaplayer.jar.packed")
		from project(":musicplayer-lavaplayer").file("build/dependencies")
	}
	
	relocate "net.harawata.appdirs", "info.u_team.music_player.shade.net.harawata.appdirs"
	
	exclude "META-INF/maven/**"
}

components.java.withVariantsFromConfiguration(configurations.getByName("shadowRuntimeElements")) {
	skip()
}

afterEvaluate {
	net.fabricmc.loom.task.LoomTasks.getIDELaunchConfigureTaskName(project).get().configure {
		dependsOn ":musicplayer-lavaplayer:assemble"
	}
}

tasks.named("remapJar").configure {
	dependsOn tasks.named("shadowJar")
}

tasks.withType(Jar).configureEach { task ->
	gradlefiles.defaultJar(task)
}

tasks.withType(Javadoc).configureEach { task ->
	task.options.addStringOption("Xdoclint:none", "-quiet")
}

gradlefiles.signDefaultFabricJar()

processResources {
	doLast {
		fileTree(dir: outputs.files.asPath, include: "**/*.json").each { File file ->
			file.text = groovy.json.JsonOutput.toJson(new groovy.json.JsonSlurper().parse(file))
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs += project(":common").sourceSets.common.java.srcDirs
		}
		resources {
			srcDirs += project(":common").sourceSets.common.resources.srcDirs
		}
	}
}

repositories {
	maven {
		url = "https://maven.parchmentmc.org"
	}
}

dependencies {
	minecraft gradlefiles.fabricMinecraftDependency()
	mappings loom.layered() {
		officialMojangMappings()
		parchment(config.fabric.mapping_layer)
	}
	
	modImplementation gradlefiles.fabricLoaderDependency()
	modImplementation gradlefiles.fabricApiDependency()
	
	modImplementation "info.u-team:u_team_core-fabric-1.19.4:5.0.2.261"
	
	library project(":musicplayer-lavaplayer-api")
	shade ("net.harawata:appdirs:1.0.0") {
		transitive=false
	}
}

gradlefiles.removePublishingDependency { dependency ->
	"appdirs".equals(dependency.name) || "musicplayer-lavaplayer-api".equals(dependency.name)
}

processResources {
	inputs.property "version", project.version
	
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

curseforge {
	apiKey = defaultPropertyValue("curseforge.token")
	
	project {
		id = config.curse.id
		releaseType = config.curse.type
		
		addGameVersion config.minecraft.version
		addGameVersion "Fabric"
		addGameVersion "Java 17"
		
		relations {
			requiredDependency "u-team-core"
			requiredDependency "fabric-api"
		}
		
		mainArtifact(tasks.getByName("remapJar")) {
			displayName = "${config.curse.display}-Fabric-${config.minecraft.version}-${project.version}"
			changelogType = "html"
			changelog = "<a href=\"${gradlefiles.changelogUrl()}\">Changelog of ${project.version}</a>"
		}
	}
}

publishing {
	repositories {
		maven {
			url "https://repo.u-team.info"
			credentials {
				username = "maven"
				password = defaultPropertyValue("maven.password")
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			artifactId archivesBaseName
			
			from components.java
			
			pom {
				name = project.archivesBaseName
				description = "${config.github.name}"
				url = "https://github.com/MC-U-Team/${config.github.name}"
				scm {
					url = "https://github.com/MC-U-Team/${config.github.name}"
					connection = "scm:git:git://github.com/MC-U-Team/${config.github.name}.git"
					developerConnection = "scm:git:git@github.com:MC-U-Team/${config.github.name}.git"
				}
				issueManagement {
					system = "github"
					url = "https://github.com/MC-U-Team/${config.github.name}/issues"
				}
				licenses {
					license {
						name = "Apache License 2.0"
						url = "https://github.com/MC-U-Team/${config.github.name}/blob/${config.github.branch}/LICENSE"
						distribution = "repo"
					}
				}
				developers {
					developer {
						name = "HyCraftHD"
					}
				}
			}
		}
	}
}